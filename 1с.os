//ВНИМАНИЕ
//Часть кода была изменена(или удалена) в связи с тем, что файл файл может содержать  коммерческую тайну предприятия
//
//
//
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыборПериодИлиКоличествоДней = Истина;
	Период.ДатаОкончания = ТекущаяДата();
	Период.ДатаНачала = Период.ДатаОкончания - (60 * 60 * 24);
	
	ЭтаФорма.КоличествоДнейПоСтатусам = 1;
	ЗагрузитьПисьмаВПолеВвода_НомерПисьма_СтатусыПродукции();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсеПоляФормы(Команда)
	
	ТабДокВыводаПродукции.Очистить();
	ОтборПисем = "";
	Отбор = "";
	ПолеВводаПодразделения = "";
	ЭтаФорма.КоличествоДнейПоСтатусам = 1;
	Период.ДатаОкончания = ТекущаяДата();
	Период.ДатаНачала = Период.ДатаОкончания - (60 * 60 * 24);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПисемАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Элементы.ОтборПисем.СписокВыбора.Очистить();
	ПараметрыПолученияДанных = Неопределено; 
	Для каждого СтрокаТабЗначАвтоЗаполнение Из ТабЗначАвтоЗаполнение Цикл
		Если СтрокаТабЗначАвтоЗаполнение <> Неопределено Тогда		
			Элементы.ОтборПисем.СписокВыбора.Добавить(СтрокаТабЗначАвтоЗаполнение["НомерЗаявки"]);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры  

#Область ПроцедурыИФункцииДаты

&НаКлиенте
Процедура ПриИзмененииПериода(Элемент)
	
	ВыборПериодИлиКоличествоДней = ЛОЖЬ;
	
	ЧислоДнейМеждуДатамиВПериоде = (НачалоДня(Период.ДатаОкончания) - НачалоДня(Период.ДатаНачала)) / (60 * 60 * 24);
	
	ИндексДляДобавленияВСписокВыбора = Элементы.КоличествоДнейПоСтатусам.СписокВыбора.Количество();
	Если ИндексДляДобавленияВСписокВыбора > 7 Тогда	
		Элементы.КоличествоДнейПоСтатусам.СписокВыбора.Удалить(ИндексДляДобавленияВСписокВыбора - 1);		
	КонецЕсли;
	Элементы.КоличествоДнейПоСтатусам.СписокВыбора.Добавить(ЧислоДнейМеждуДатамиВПериоде, ЧислоДнейМеждуДатамиВПериоде);
	ЭтаФорма.КоличествоДнейПоСтатусам = ЧислоДнейМеждуДатамиВПериоде;
	
	ИзменениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКоличествоДнейПоСтатусам(Элемент)
	
	ВыборПериодИлиКоличествоДней = Истина;
	ИзменениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеПериода()
	
	ИндексДляДобавленияВСписокВыбора = Элементы.КоличествоДнейПоСтатусам.СписокВыбора.Количество();
	
	Если ИндексДляДобавленияВСписокВыбора > 7 Тогда	
		Элементы.КоличествоДнейПоСтатусам.СписокВыбора.Удалить(ИндексДляДобавленияВСписокВыбора - 1);		
	КонецЕсли;
	
	Если ВыборПериодИлиКоличествоДней Тогда	
		Если КоличествоДнейПоСтатусам <= 7 Тогда	
			Элементы.КоличествоДнейПоСтатусам.ОбновитьТекстРедактирования();
			Период.ДатаОкончания = ТекущаяДата();
			Период.ДатаНачала = Период.ДатаОкончания - (60 * 60 * 24) * Число(КоличествоДнейПоСтатусам);
		Иначе
			Период.ДатаОкончания = ТекущаяДата();
			Период.ДатаНачала = Период.ДатаОкончания - (60 * 60 * 24);
		КонецЕсли;
		
	КонецЕсли; 		
	ЗагрузитьПисьмаВПолеВвода_НомерПисьма_СтатусыПродукции();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореКоличествоДнейПоСтатусам(Элемент, СтандартнаяОбработка)
	
	ВыборПериодИлиКоличествоДней = Истина;	
	ИзменениеПериода();	
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииВыгрузкиДанных 
&НаКлиенте
Процедура ВыгрузкаПродукции(Команда)
	
	ВыгрузкаПродукцииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузкаПродукцииНаСервере()
	
	ТабДок = ТабДокВыводаПродукции;
	
	ДатаКон = Период.ДатаОкончания;
	ДатаНач = Период.ДатаНачала;
	
	
	ТабСвойстваПоСерии = Новый ТаблицаЗначений();
	ТабСвойстваПоСерии.Колонки.Добавить("", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)), "", 10);
	ТабСвойстваПоСерии.Колонки.Добавить("", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)), "СерияПродукцииРФ", 10);	
	ТабСвойстваПоСерии.Колонки.Добавить("", Новый ОписаниеТипов("Число"), "", 10);
	ТабСвойстваПоСерии.Колонки.Добавить("", Новый ОписаниеТипов("Дата"), "", 10);
	ТабСвойстваПоСерии.Колонки.Добавить("", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)), "", 10);
	ТабСвойстваПоСерии.Колонки.Добавить("", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(150)), "", 10);
	ТабСвойстваПоСерии.Колонки.Добавить("", Новый ОписаниеТипов("Булево"), "", 10);
	
	
	Макет = Обработки..ПолучитьМакет("МакетВыгрузкиПродукции");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СсылкаНаЗаявку КАК СсылкаНаЗаявку,
	|	НомерЗаявки КАК Заявка,
	|	СерияПродукцииРФ КАК СерияПродукцииРФ,
	|	СерияПродукцииКитай КАК СерияПродукцииКитай,
	|	НоменклатураПродукции КАК НоменклатураПродукции,
	|	ХарактеристикаПродукции КАК ХарактеристикаПродукции,
	|	Продукция КАК Продукция
	|ИЗ
	|	РегистрСведений.СтатусПродукции КАК СтатусПродукции
	|ГДЕ
	|	СтатусПродукции.Заказ.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И СтатусПродукции.НоменклатураПродукции.Наименование ПОДОБНО &Наименование
	|	И СтатусПродукции.Продукция.НомерЗаявки ПОДОБНО &НомерЗаявки
	|	И ВЫБОР
	|			КОГДА НЕ Подразделение ЕСТЬ NULL
	|				ТОГДА Подразделение
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|		КОНЕЦ = &Подразделение
	|	И ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Заявка
	|ИТОГИ
	|	КОЛИЧЕСТВО(Продукция)
	|ПО
	|	СсылкаНаЗаявку,
	|	Заявка,
	|	СерияПродукцииРФ,
	|	СерияПродукцииКитай,
	|	НоменклатураПродукции,
	|	ХарактеристикаПродукции";
	
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("Наименование", "%" + ЭтаФорма.Отбор + "%");
	Запрос.УстановитьПараметр("НомерЗаявки", "%" + ЭтаФорма.ОтборПисем + "%");
	Запрос.УстановитьПараметр("ПодразделениеСИГ", ПолеВводаПодразделения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	ТабВыгрузкаСерий = РезультатЗапроса.Выгрузить();
	ТабВыгрузкаСерий.Свернуть("СерияПродукцииРФ");
	МассивСерий = ТабВыгрузкаСерий.ВыгрузитьКолонку("СерияПродукцииРФ");
	
	ПолучитьНомераЗаявокПоСериям(МассивСерий, ТабСвойстваПоСерии);
	
	
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьЗаявка = Макет.ПолучитьОбласть("Заявка");
	ОбластьСерияПродукцииРФ = Макет.ПолучитьОбласть("СерияОбщая");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаСсылкаНаЗаявку = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСсылкаНаЗаявку.Следующий() Цикл	
		
		ВыборкаЗаявка = ВыборкаСсылкаНаЗаявку.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
		Пока ВыборкаЗаявка.Следующий() Цикл
			
			ОбластьЗаявка.Параметры.Заполнить(ВыборкаЗаявка);			
			СтрокаЗаказчик = ТабСвойстваПоСерии.Найти(ВыборкаЗаявка["СсылкаНаЗаявку"], "НомерЗаявкиGUID");
			Если СтрокаЗаказчик <> Неопределено Тогда
				
				ОбластьЗаявка.Параметры["ЗаказчикИмя"] = СокрЛП(СтрокаЗаказчик["ЗаказчикИмя"]);
			КонецЕсли;			
			ТабДок.Вывести(ОбластьЗаявка, ВыборкаЗаявка.Уровень());			
			ВыборкаСерияПродукцииРФ = ВыборкаЗаявка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСерияПродукцииРФ.Следующий() Цикл
				
				ВыборкаСерияПродукцииКитай = ВыборкаСерияПродукцииРФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);					 
				Пока ВыборкаСерияПродукцииКитай.Следующий() Цикл
					
					СерияПродукцииРФ = ВыборкаСерияПродукцииРФ["СерияПродукцииРФ"];
					СерияОбщая = СерияПродукцииРФ;					
					Если ЗначениеЗаполнено(ВыборкаСерияПродукцииКитай["СерияПродукцииКитай"]) Тогда
						
						СерияОбщая = СерияОбщая + Символы.ПС + ВыборкаСерияПродукцииКитай["СерияПродукцииКитай"];
					КонецЕсли;
					
					ВыборкаНоменклатураПродукции = ВыборкаСерияПродукцииКитай.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
					Пока ВыборкаНоменклатураПродукции.Следующий() Цикл
						
						ВыборкаХарактеристикаПродукции = ВыборкаНоменклатураПродукции.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);									
						Пока ВыборкаХарактеристикаПродукции.Следующий() Цикл
							
							ОбластьСерияПродукцииРФ.Параметры.Заполнить(ВыборкаХарактеристикаПродукции);
							ОбластьСерияПродукцииРФ.Параметры["СерияПродукцииРФ"] = СерияПродукцииРФ;
							ОбластьСерияПродукцииРФ.Параметры["СерияОбщая"] = СерияОбщая;
							ТабДок.Вывести(ОбластьСерияПродукцииРФ, ВыборкаХарактеристикаПродукции.Уровень());							
							ВыборкаДетальныеЗаписи = ВыборкаХарактеристикаПродукции.Выбрать();	
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								
								ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
								ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
							КонецЦикла;
						КонецЦикла;						
					КонецЦикла;					
				КонецЦикла;			
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.ПоказатьУровеньГруппировокСтрок(1);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПисьмаВПолеВвода_НомерПисьма_СтатусыПродукции()
	
	ТабЗначАвтоЗаполнение.Очистить();
	
	ДатаНач = Период.ДатаНачала;
	ДатаКон = Период.ДатаОкончания;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Продукция
	|ПОМЕСТИТЬ ЗапросПоследнееСобытие
	|ИЗ
	|	СтатусПродукции КАК СтатусПродукции
	|ГДЕ
	|	СтатусПродукции.Заказ.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И СтатусПродукции.ДокументДвижения.ПометкаУдаления = ЛОЖЬ
	|	И СтатусПродукции.Продукция.ПродукцияРодитель = ЗНАЧЕНИЕ(Справочник.Продукция.ПустаяСсылка)
	|	И СтатусПродукции.Продукция.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СсылкаНаЗаявку КАК СсылкаНаЗаявку,
	|	НомерЗаявки КАК НомерЗаявки
	|ИЗ
	|	ЗапросПоследнееСобытие КАК ЗапросПоследнееСобытие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗапросПоследнееСобытие";
	
	Запрос.Параметры.Вставить("ДатаНач", ДатаНач);
	Запрос.Параметры.Вставить("ДатаКон", ДатаКон);  
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрокаВТабЗначАвтоЗаполнение = ТабЗначАвтоЗаполнение.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаВТабЗначАвтоЗаполнение, ВыборкаДетальныеЗаписи);		
	КонецЦикла;	
	

КонецПроцедуры

#КонецОбласти

#Область ОбластьПроцедурИФункцийВыбораЯчейкиВТабДоке
&НаКлиенте
Процедура ТабДокВыводаПродукцииВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если (Область.Лево  = 2) Тогда
		Если  ЗначениеЗаполнено(Область.Текст) Тогда
			Если ТипЗнч(Область.Расшифровка) = Тип("Строка") Тогда
				Если СокрЛП(Область.Расшифровка) <> "" Тогда
					СтандартнаяОбработка = Ложь;
					СтрокаОбластьРасшифровка = Область.Расшифровка;
					ПолученныеПараметрыФормы = Новый Структура;
					ПолученныеПараметрыФормы = ТабДокВыводаПродукцииВыборНаСервере(СтрокаОбластьРасшифровка);
					ОткрытьФорму("Обработка.Форма.ФормаДокумента", ПолученныеПараметрыФормы);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Область.Лево >= 5 И Область.Лево <= 15  Тогда
		Если ЗначениеЗаполнено(Область.Текст) Тогда	
			Если ТипЗнч(Область.Расшифровка) = Тип("СправочникСсылка.Продукция") Тогда
				СтандартнаяОбработка = Ложь;
				РезультатМеню = ВывестиМенюПоВыпущеннойПродукции(Элемент);
				Если РезультатМеню <> Неопределено Тогда
					Если РезультатМеню = "ПоказатьАктПСИ" Тогда
						ТекПродукция = Область.Расшифровка;	
						ПараметрыФормы = Новый Структура;	
						ПараметрыФормы.Вставить("Продукция", ТекПродукция);
						ОткрытьФорму("Обработка.ОбработкаПоПродукции.Форма.ФормаАктПСИ", ПараметрыФормы, ЭтаФорма);					
					ИначеЕсли РезультатМеню = "ИнформацияПоПродукции" Тогда 
						СтандартнаяОбработка = Истина;
					КонецЕсли; 					
				КонецЕсли;		
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ТабДокВыводаПродукцииВыборНаСервере(СтрокаОбластьРасшифровка)
	
	Если СтрДлина(СтрокаОбластьРасшифровка) = 36 Тогда
		
		// ******************* HTTP Соединение *******************
		myURL = "";
		ПараметрыЗапроса = "?Link=" + СтрокаОбластьРасшифровка;
		тОтвет = ЗапросHTTP("GET", myURL, ПараметрыЗапроса);
		// *******************************************************/
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("тОтвет", тОтвет);
		Возврат ПараметрыФормы;				
	Иначе
		// ******************* HTTP Соединение *******************
		myURL = "";
		ПараметрыЗапроса = "?SeriesRF=" + СтрокаОбластьРасшифровка;
		тОтвет = ЗапросHTTP("GET", myURL, ПараметрыЗапроса);
		// *******************************************************/
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("тОтвет", тОтвет);
		Возврат ПараметрыФормы;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ВывестиМенюПоВыпущеннойПродукции(Элемент)
	
	Меню = Новый СписокЗначений;
	Меню.Добавить("ПоказатьАктПСИ", 	 "Показать Акт ПСИ");
	Меню.Добавить("ИнформацияПоПродукции", "Информация по продукции");
	
	ВыбранныйЭлемент = ВыбратьИзМеню(Меню, Элемент);
	
	Если ВыбранныйЭлемент = Неопределено Тогда 
		Возврат Неопределено;    
	ИначеЕсли ВыбранныйЭлемент.Значение = "ПоказатьАктПСИ" Тогда
		Возврат "ПоказатьАктПСИ";    
	ИначеЕсли ВыбранныйЭлемент.Значение = "ИнформацияПоПродукции" Тогда
		Возврат "ИнформацияПоПродукции";
	КонецЕсли;
КонецФункции // ()

#КонецОбласти 
 